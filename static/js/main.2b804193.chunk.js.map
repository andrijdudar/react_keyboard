{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","firstRender","key","pressedKey","event","setState","document","addEventListener","this","removeEventListener","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAEaA,EAAb,4MACEC,MAAQ,CACNC,aAAa,EACbC,IAAK,IAHT,EAcEC,WAAa,SAACC,GACZ,EAAKC,SAAS,CAAEJ,aAAa,EAAOC,IAAKE,EAAMF,OAfnD,uDAME,WACEI,SAASC,iBAAiB,QAASC,KAAKL,cAP5C,kCAUE,WACEG,SAASG,oBAAoB,QAASD,KAAKL,cAX/C,oBAkBE,WACE,MAA6BK,KAAKR,MAA1BC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,IAErB,OACE,qBAAKQ,UAAU,MAAf,SACGT,EACG,mBAAGS,UAAU,eAAb,qCACA,mBAAGA,UAAU,eAAb,4CAAyDR,EAAzD,aAzBZ,GAAyBS,IAAMC,W,MCG/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.2b804193.chunk.js","sourcesContent":["import React from 'react';\n\nexport class App extends React.Component {\n  state = {\n    firstRender: true,\n    key: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.pressedKey);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.pressedKey);\n  }\n\n  pressedKey = (event: KeyboardEvent) => {\n    this.setState({ firstRender: false, key: event.key });\n  };\n\n  render() {\n    const { firstRender, key } = this.state;\n\n    return (\n      <div className=\"App\">\n        {firstRender\n          ? <p className=\"App__message\">Nothing was pressed yet</p>\n          : <p className=\"App__message\">{`The last pressed key is [${key}]`}</p>}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}